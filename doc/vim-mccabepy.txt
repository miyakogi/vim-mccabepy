*vim-mccabepy.txt* Runs McCabe complexity check (mccabe.py) for python script.

Author: miyakogi (https://github.com/miyakogi/)
Repository: https://github.com/miyakogi/vim-mccabepy
Version: 0.1 (Last changed: Feb. 26, 2014)

==============================================================================
CONTENTS					*vim-mccabepy-contents*

  1. Introduction.............................. |vim-mccabepy-introduction|
  2. Usage..................................... |vim-mccabepy-usage|
  3. Commands.................................. |vim-mccabepy-commands|
  4. Options................................... |vim-mccabepy-options|

==============================================================================
1. INTRODUCTION					*vim-mccabepy-introduction*

This plugin runs McCabe complexity check (mccabe.py) and show the results in
|location-list| window.

Features:~
  - Support both python 2.x and python 3.x.

==============================================================================
2. USAGE					*vim-mccabepy-usage*

Execute |:MccabePy| on any python script files. Before use this plugin, please
confirm that `mccabe.py` is installed. If it is not installed, please run >
	pip install mccabe
<

Note: If you are using `virtualenv` and `vim-virtualenv`, please install
`mccabe.py` into the virtual environment. This plugin uses `mccabe.py`
installed in the virtual environment.

==============================================================================
3. COMMANDS					*vim-mccabepy-commands*

------------------------------------------------------------------------------
:MccabePy					*:MccabePy*

Run mccabe.py and measure complexity of the code in the current buffer. If
there were any function or method which exceed minimum complexity defined by
|g:mccabepy_min_complexity|, they were shown in |location-list| window (by
default).

==============================================================================
4. OPTIONS					*vim-mccabepy-options*

------------------------------------------------------------------------------
						*b:mccabepy_min_complexity*
						*g:mccabepy_min_complexity*
This option defines the minimum complexity to be reported. If buffer local
variable |b:mccabepy_min_complexity| exists, |g:mccabepy_min_complexity| is
ignored.

  Type: Number
  Default: 10
  Example: >
	let g:mccabepy_min_complexity = 6
<

------------------------------------------------------------------------------
						*g:mccabepy_loc_open_cmd*
This option specifies the command to open location-list (or other) window to
show the results.

  Type: String
  Default: 'lopen'
  Example (for Unite user): >
	let g:mccabepy_loc_open_cmd = 'Unite location-list -no-quit' .
					\ '-buffer-name=mccabepy'
<

------------------------------------------------------------------------------
						*g:mccabepy_loc_close_cmd*
This option specifies the command to be executed if no function/method was
found to exceed |b:mccabepy_min_complexity| or |g:mccabepy_min_complexity|.
By default, close |location-list| window.

  Type: String
  Default: 'lclose'
  Example 1 (do nothing): >
	let g:mccabepy_loc_close_cmd = ''
<
  Example 2 (close Unite' location-list window, for Unite user): >
	let g:mccabepy_loc_close_cmd = 'UniteClose mccabe'
<

vim:tw=78:sw=8:ts=8:ft=help:norl:noet:
